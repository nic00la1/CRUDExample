@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}
<form asp-controller="Persons" asp-action="Index" method="get">
    <div class="flex">
        <div class="flex-1">
            <span class="text-grey">Contacts</span>
            <i class="fa-solid fa-caret-right text-grey"></i>
            <span class="text-grey">Persons</span>
        </div>
        
        <div class="flex-1 text-right">
            <a asp-controller="Persons" asp-action="Create" class="button-link button-blue-back">Create new person</a>
            <a asp-controller="Persons" asp-action="PersonsPDF" class="button-link button-blue-back ml">Export to PDF</a>
            <a asp-controller="Persons" asp-action="PersonsCSV" class="button-link button-blue-back ml">Export to CSV</a>
            <a asp-controller="Persons" asp-action="PersonsEXCEL" class="button-link button-blue-back ml">Export to EXCEL</a>
        </div>
    </div>
    
    <div class="table-container">
        <div class="flex">
            <div class="flex-1"><h1>Persons</h1></div>
            <div class="flex-3 text-right">
                <label>Search by: </label>
                <select class="search-dropdown" name="searchBy" style="width: 200px">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.CurrentSearchBy)
                        {
                            <option value="@field.Key" selected>@field.Value</option>
                        } else
                        {
                            <option value="@field.Key">@field.Value</option>
                        }
                    }
                    @* Eg: searchBy=PersonPersonName&searchString=abc*@
                </select>
                
                <input type="search" id="search" class="search-text"
                       placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width: 200px"/>
                
                <button class="search-button">Search</button>
                <a asp-controller="Persons" asp-action="Index" class="ml link-hover clear-btn">Clear all</a>
            </div>
        </div>
    
        <table class="table w-100 mt persons">
            <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    { "ColumnName", nameof(PersonResponse.PersonName) },
                    { "ColumnDisplayName", "Person Name" },
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    { "ColumnName", nameof(PersonResponse.Email) },
                    { "ColumnDisplayName", "Email" },
                }) @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                   {
                       { "ColumnName", nameof(PersonResponse.DateOfBirth) },
                       { "ColumnDisplayName", "Date of Birth" },
                   })@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                     {
                         { "ColumnName", nameof(PersonResponse.Age) },
                         { "ColumnDisplayName", "Age" },
                     })@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                       {
                           { "ColumnName", nameof(PersonResponse.Gender) },
                           { "ColumnDisplayName", "Gender" },
                       })@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                         {
                             { "ColumnName", nameof(PersonResponse.Country) },
                             { "ColumnDisplayName", "Country" },
                         })@await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                           {
                               { "ColumnName", nameof(PersonResponse.Address) },
                               { "ColumnDisplayName", "Address" },
                           })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    { "ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
                    { "ColumnDisplayName", "Receive News Letters" },
                })
                <th style="width: 20%">Actions</th>

            </tr>
            </thead>
            <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td style="width: 10%">@person.PersonName</td>
                    <td style="width: 20%">@person.Email</td>
                    <td style="width: 10%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td style="width: 6%">@person.Age</td>
                    <td style="width: 8%">@person.Gender</td>
                    <td style="width: 10%">@person.Country</td>
                    <td style="width: 15%">@person.Address</td>
                    <td style="width: 8%">@person.ReceiveNewsLetters</td>
                    <td style="width: 20%">
                        <a asp-controller="Persons" asp-action="Edit" asp-route-personID="@person.ID" class="link-hover button-blue-back">Edit</a>
                        <a asp-controller="Persons" asp-action="Delete" asp-route-personID="@person.ID" class="link-hover  button-red-back">Delete</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

</form>